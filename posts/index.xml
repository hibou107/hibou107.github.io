<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My technical blog</title>
    <link>https://namfp.github.io/posts/</link>
    <description>Recent content in Posts on My technical blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Apr 2019 15:39:44 +0200</lastBuildDate>
    
	<atom:link href="https://namfp.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Game of Life</title>
      <link>https://namfp.github.io/posts/gameoflife/</link>
      <pubDate>Mon, 15 Apr 2019 15:39:44 +0200</pubDate>
      
      <guid>https://namfp.github.io/posts/gameoflife/</guid>
      <description>&lt;h1 id=&#34;this-is-my-game-of-life&#34;&gt;This is my game of life&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>Create a Validation DSL from scratch with scala</title>
      <link>https://namfp.github.io/posts/validation-from-scratch/</link>
      <pubDate>Fri, 12 Apr 2019 15:07:12 +0200</pubDate>
      
      <guid>https://namfp.github.io/posts/validation-from-scratch/</guid>
      <description>Introduction If I have to pick any subject to talk about functional programming, I will choose the validation. Any developers who do not need to validate some input data and provide all the errors associated with them?
It&amp;rsquo;s a common mistake by junior developers to ignore the error handlings process. They take the correct input, test the program and are very happy when they see it works, then push to production.</description>
    </item>
    
    <item>
      <title>Designing a comparator library for regression test</title>
      <link>https://namfp.github.io/posts/comparator-library/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://namfp.github.io/posts/comparator-library/</guid>
      <description>Regression test Let&amp;rsquo;s quote the definition of regression testing from Wikipedia:
 Regression testing is a type of software testing which verifies that software which was previously developed and tested still performs the same way after it was changed or interfaced with other software. Changes may include software enhancements, patches, configuration changes.
 This kind of test is prevalent in the numerical library. In such projects, the developers want to make sure that the output of the program (which are numerical values) does not change.</description>
    </item>
    
    <item>
      <title>Designing a json migration tool</title>
      <link>https://namfp.github.io/posts/designing-json-migration/</link>
      <pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://namfp.github.io/posts/designing-json-migration/</guid>
      <description>The problems Json is probably the most popular data format today. It&amp;rsquo;s used both for data exchange (between front-end and backend for example). It&amp;rsquo;s also used to store inside database like MongoDB, even postgresql supports json data type.
Working with json means defining 2 functions:
 A Writer that converts an object into json format A Reader that reads a json and produces an object  An example of this use case is:</description>
    </item>
    
    <item>
      <title>A json migration tool</title>
      <link>https://namfp.github.io/posts/json-migration/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://namfp.github.io/posts/json-migration/</guid>
      <description>json-migration This project tries to help building a json migration framework in the same way of a database migration tool.
The json libary used in this example is play-json
The aim of this project is to make the migration script easy to write by people who does not have much experience in functional programming. Even experienced programmers can stuck with the Coast to coast design
This comes with a cost because it&amp;rsquo;s not type safe: if the user wants to update a field which is a string but it&amp;rsquo;s an object in realty, then an Exception is throw.</description>
    </item>
    
  </channel>
</rss>